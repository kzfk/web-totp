{"version":3,"sources":["components/navigation/navbar.js","theme/layout/layout.js","components/search/searchbar.js","components/progress/circularprogress.js","util/getTotpGenerator.js","util/common.js","components/totpcell/totpcell.js","pages/landing/views/showTotpView.js","components/textfield/textfield.js","pages/landing/views/addTotpView.js","components/snackbar/snackbar.js","pages/landing/landing.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","theme/theme.js","index.js"],"names":["useStyles","makeStyles","theme","appbar","backgroundColor","color","palette","background","contrastText","boxShadow","toolbar","justifyContent","fontSize","flexDirection","logo","fontWeight","padding","spacing","paddingBottom","logoSecondary","primary","dark","text","textAlign","Navbar","classes","AppBar","position","className","Toolbar","Box","Typography","variant","Layout","children","search","borderRadius","shape","alpha","secondary","main","marginRight","marginLeft","width","searchIcon","height","pointerEvents","display","alignItems","inputInput","paddingLeft","transition","transitions","create","breakpoints","up","SearchBar","placeholder","onChange","InputBase","input","inputProps","CircularProgressWithLabel","min","max","value","CircularProgress","top","left","bottom","right","component","getTotpGenerator","milliseconds","useState","generator","gen","setGen","tick","setTick","Promise","resolve","setTimeout","then","name","icon","mainGrid","getTime","Math","floor","Date","now","getT","TotpCell","id","secret","snackbarOpen","totp","setTotp","t","setT","expiry","setExpiry","time","setTime","totpGenerator","setInterval","validTime","useEffect","Grid","container","onClick","navigator","clipboard","writeText","toString","item","xs","IconButton","VpnKey","Container","mr","cellBox","border","overflowY","cell","cursor","borderCell","borderBottom","iconButton","marginBottom","borderButton","noItems","ShowTotpView","data","handleViewChange","clearAllCodes","snackBarOpen","filter","setFilter","React","anchorEl","setAnchorEl","handleMenuClose","filteredData","toLowerCase","includes","e","target","Button","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","length","map","py","textField","TextFieldLabelled","label","error","helperText","root","TextField","addTotpBox","goBackText","textTransform","goBackIcon","addBtnBox","paddingTop","addBtn","addBtnText","paddingRight","AddTotpView","handleAddCode","secretText","setSecretText","nameText","setNameText","errorSecretText","setErrorSecretText","errorNameText","setErrorNameText","p","autoComplete","mb","preventDefault","Alert","props","elevation","CustomSnackbar","forwardRef","ref","setOpen","useImperativeHandle","handleOpen","handleClose","reason","Snackbar","autoHideDuration","severity","marginTop","cellContainer","light","contentBox","viewTypes","Landing","activeContent","setActiveContent","snackbarText","setSnackbarText","snackbarRef","useRef","useLocalStorageState","setData","code","reset","newType","current","md","variableContent","app","CustomRoute","path","exact","App","document","title","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","ReactDOM","render","StrictMode","ThemeProvider","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a7b42201.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  AppBar, Box, Toolbar, Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  appbar: {\n    backgroundColor: 'transparent',\n    color: theme.palette.background.contrastText,\n    boxShadow: 'none',\n  },\n  toolbar: {\n    justifyContent: 'center',\n    fontSize: '20px !important',\n    flexDirection: 'column',\n  },\n  logo: {\n    fontWeight: 'bolder',\n    padding: theme.spacing(4),\n    paddingBottom: theme.spacing(1),\n  },\n  logoSecondary: {\n    color: theme.palette.primary.dark,\n  },\n  text: {\n    textAlign: 'center',\n  },\n}));\n\nexport default function Navbar() {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\" className={classes.appbar}>\n      <Toolbar className={classes.toolbar}>\n        <Box>\n          <Typography variant=\"h4\" className={classes.logo}>\n            Web -\n            {' '}\n            <span className={classes.logoSecondary}>TOTP</span>\n          </Typography>\n        </Box>\n        <Box>\n          <Typography variant=\"h6\" className={classes.text}>\n            An open source TOTP Generation tool\n          </Typography>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport Navbar from '../../components/navigation/navbar';\n\nexport default function Layout({ children }) {\n  return (\n    <div>\n      <Navbar />\n      { children }\n    </div>\n  );\n}\n","import React from 'react';\nimport { Box, InputBase, makeStyles } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { alpha } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  search: {\n    position: 'absolute',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.secondary.main, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.secondary.main, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: 'auto',\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n\nexport default function SearchBar({ placeholder, onChange }) {\n  const classes = useStyles();\n  return (\n    <Box>\n      <div className={classes.search}>\n        <div className={classes.searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder={placeholder}\n          classes={{\n            input: classes.inputInput,\n          }}\n          inputProps={{ 'aria-label': 'search' }}\n          onChange={onChange}\n        />\n      </div>\n    </Box>\n  );\n}\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nexport default function CircularProgressWithLabel({ min, max, value }) {\n  const normalize = () => ((value - min) * 100) / (max - min);\n\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress variant=\"determinate\" value={normalize(value)} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{value}</Typography>\n      </Box>\n    </Box>\n  );\n}\n","/* eslint-disable no-undef */\n\nimport { useState } from 'react';\nimport { wait } from './common';\n\nexport default function getTotpGenerator() {\n  const [gen, setGen] = useState(() => generator);\n  const [tick, setTick] = useState(false);\n\n  if (!gen) {\n    if (typeof generator === 'function') {\n      setGen(() => generator);\n    } else {\n      wait(50).then(() => setTick(!tick));\n    }\n  }\n\n  return generator;\n}\n","export function wait(milliseconds) {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n}\n\nexport function unixtime() {\n  return Math.floor(Date.now() / 1000);\n}\n","import React, {\n  useEffect,\n  useState,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  Container,\n  Box,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport { VpnKey } from '@material-ui/icons';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgressWithLabel from '../progress/circularprogress';\nimport getTotpGenerator from '../../util/getTotpGenerator';\nimport { unixtime } from '../../util/common';\n\nconst useStyles = makeStyles((theme) => ({\n  name: {\n    color: theme.palette.secondary.dark,\n  },\n  icon: {\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.main,\n    },\n  },\n  mainGrid: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst getTime = () => (unixtime());\nconst getT = () => (Math.floor(getTime() / 30));\nconst getTotpExpiryTime = () => (getT() * 30 + 30);\n\nexport default function TotpCell({\n  id, name, secret, snackbarOpen,\n}) {\n  const classes = useStyles();\n  const [totp, setTotp] = useState(0);\n  const [t, setT] = useState(0);\n  const [expiry, setExpiry] = useState(0);\n  const [time, setTime] = useState(getTime());\n\n  const totpGenerator = getTotpGenerator();\n\n  setInterval(() => setTime(getTime()), 1000);\n  const validTime = Math.max(0, expiry - time);\n\n  useEffect(() => {\n    if (typeof totpGenerator === 'function') {\n      setTotp(totpGenerator(secret, 32));\n      setExpiry(getTotpExpiryTime());\n      setT(getT());\n    }\n  }, [totpGenerator, secret, t]);\n\n  useEffect(() => {\n    if (time >= expiry) {\n      setT(getT());\n    }\n  }, [time]);\n\n  return (\n    <>\n      <Grid\n        container\n        className={classes.mainGrid}\n        spacing={0}\n        id={id}\n        alignItems=\"center\"\n        onClick={() => {\n          navigator.clipboard.writeText(totp.toString())\n            .then(() => snackbarOpen('Copied!'));\n        }}\n      >\n        <Grid item xs={2}>\n          <Box display=\"flex\" justifyContent=\"center\">\n            <IconButton className={classes.icon}>\n              <VpnKey />\n            </IconButton>\n          </Box>\n        </Grid>\n        <Grid item xs={8}>\n          <Container>\n            <Typography variant=\"h5\">\n              {totp || '------'}\n            </Typography>\n            <Typography variant=\"subtitle1\" className={classes.name}>\n              {name}\n            </Typography>\n          </Container>\n        </Grid>\n        <Grid item xs={2}>\n          <Box display=\"flex\" justifyContent=\"center\" mr={2}>\n            <CircularProgressWithLabel max={30} min={0} value={validTime} />\n          </Box>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Menu,\n  MenuItem,\n  Grid,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchBar from '../../../components/search/searchbar';\nimport TotpCell from '../../../components/totpcell/totpcell';\n\nconst useStyles = makeStyles((theme) => ({\n  cellBox: {\n    borderRadius: '4px',\n    border: '1px solid #CCCCCC',\n    height: '50vh',\n    overflowY: 'scroll',\n  },\n  cell: {\n    cursor: 'pointer',\n    '&:hover': {\n      backgroundColor: theme.palette.background.main,\n    },\n    '&:active': {\n      backgroundColor: theme.palette.background.dark,\n    },\n  },\n  borderCell: {\n    borderBottom: '1px dashed #CCCCCC',\n  },\n  iconButton: {\n    marginBottom: theme.spacing(2),\n  },\n  borderButton: {\n    border: '1px solid #CCCCCC',\n  },\n  noItems: {\n    color: theme.palette.secondary.main,\n    textAlign: 'center',\n  },\n}));\n\nexport default function ShowTotpView({\n  data, handleViewChange, clearAllCodes, snackBarOpen,\n}) {\n  const classes = useStyles();\n  const [filter, setFilter] = useState('');\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleSearchChange = (e) => {\n    const { value } = e.target;\n    setFilter(value.toLowerCase());\n  };\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const filteredData = data.filter((item) => item.name.toLowerCase().includes(filter));\n\n  return (\n    <>\n      <Box width={1}>\n        <Grid container>\n          <Grid item xs={8}>\n            <SearchBar onChange={handleSearchChange} placeholder=\"Search...\" />\n          </Grid>\n          <Grid item xs={4}>\n            <Box display=\"flex\" justifyContent=\"space-around\">\n              <Button\n                aria-label=\"settings\"\n                aria-controls=\"settings-menu\"\n                aria-haspopup=\"true\"\n                className={classes.iconButton}\n                onClick={handleMenuClick}\n              >\n                <SettingsIcon />\n              </Button>\n              <Menu\n                id=\"settings-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleMenuClose}\n              >\n                <MenuItem\n                  onClick={() => { clearAllCodes(); handleMenuClose(); }}\n                >\n                  Delete everything\n                </MenuItem>\n              </Menu>\n              <Button\n                aria-label=\"Add\"\n                className={`${classes.iconButton} ${classes.borderButton}`}\n                onClick={() => handleViewChange('add')}\n              >\n                <AddIcon />\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n        <Box className={classes.cellBox} width={1}>\n          { filteredData.length\n            ? filteredData.map((item) => (\n              <Box className={`${classes.cell} ${classes.borderCell}`} key={item.id}>\n                <TotpCell\n                  secret={item.secret}\n                  id={item.id}\n                  name={item.name}\n                  snackbarOpen={snackBarOpen}\n                />\n              </Box>\n            )) : (\n              <Box className={classes.noItems} py={1}>\n                {data.length\n                  ? 'No totp entries found with given filter.'\n                  : 'No shared secrets found.'}\n              </Box>\n            )}\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Typography, TextField } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  textField: {\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '70%',\n    },\n    '& input': {\n      height: '0.5rem',\n    },\n  },\n}));\n\nexport default function TextFieldLabelled({\n  placeholder, label, onChange, error = false, helperText = '',\n}) {\n  const classes = useStyles();\n  return (\n    <Box className={classes.root}>\n      <Typography variant=\"subtitle1\">\n        {label}\n      </Typography>\n      <TextField\n        error={error}\n        helperText={helperText}\n        className={classes.textField}\n        variant=\"outlined\"\n        onChange={onChange}\n        placeholder={placeholder}\n      />\n    </Box>\n  );\n}\n","import React, { useState } from 'react';\nimport { Box, Button, Typography } from '@material-ui/core';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextFieldLabelled from '../../../components/textfield/textfield';\n\nconst useStyles = makeStyles((theme) => ({\n  addTotpBox: {\n    borderRadius: '4px',\n    height: '50vh',\n  },\n  goBackText: {\n    color: theme.palette.primary.main,\n    textTransform: 'none',\n    paddingLeft: theme.spacing(1),\n  },\n  goBackIcon: {\n    color: theme.palette.primary.main,\n  },\n  addBtnBox: {\n    paddingTop: theme.spacing(2),\n  },\n  addBtn: {\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark,\n    },\n    textTransform: 'none',\n  },\n  addBtnText: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n  },\n}));\n\nexport default function AddTotpView({ handleViewChange, handleAddCode, snackBarOpen }) {\n  const classes = useStyles();\n  const [secretText, setSecretText] = useState('');\n  const [nameText, setNameText] = useState('');\n  const [errorSecretText, setErrorSecretText] = useState('');\n  const [errorNameText, setErrorNameText] = useState('');\n\n  const handleSecretTextChange = (e) => {\n    const { value } = e.target;\n    setSecretText(value);\n    if (value.length) {\n      setErrorSecretText('');\n    } else {\n      setErrorSecretText('Shared secret cannot be empty');\n    }\n  };\n\n  const handleNameTextChange = (e) => {\n    const { value } = e.target;\n    setNameText(value);\n    if (value.length) {\n      setErrorNameText('');\n    } else {\n      setErrorNameText('Name cannot be empty');\n    }\n  };\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n    if (!secretText.length || !nameText.length) {\n      if (!secretText.length) {\n        setErrorSecretText('Shared secret cannot be empty');\n      }\n      if (!nameText.length) {\n        setErrorNameText('Name cannot be empty');\n      }\n      return;\n    }\n\n    handleAddCode(secretText, nameText);\n    handleViewChange('show');\n    snackBarOpen('Totp entry added successfully!');\n  };\n\n  return (\n    <>\n      <Box width={1} className={classes.addTotpBox}>\n        <Box width={1}>\n          <Button onClick={() => handleViewChange('show')}>\n            <ArrowBackIcon className={classes.goBackIcon} />\n            <Typography variant=\"h5\" className={classes.goBackText}>\n              Go Back\n            </Typography>\n          </Button>\n        </Box>\n        <Box p={2}>\n          <Typography>\n            You can add authenticator accounts by entering the code provided by the\n            service in which you want to enable 2FA below.\n          </Typography>\n        </Box>\n        <Box p={2}>\n          <form autoComplete=\"off\">\n            <Box mb={2}>\n              <TextFieldLabelled\n                error={!!errorSecretText.length}\n                helperText={errorSecretText}\n                placeholder=\"Eg. GEZDGNBVGY3TQOJQ\"\n                label=\"Shared secret: \"\n                onChange={handleSecretTextChange}\n              />\n            </Box>\n            <Box mb={2}>\n              <TextFieldLabelled\n                error={!!errorNameText.length}\n                helperText={errorNameText}\n                placeholder=\"Eg. My vault key\"\n                label=\"Name: \"\n                onChange={handleNameTextChange}\n              />\n            </Box>\n            <Box className={classes.addBtnBox}>\n              <Button className={classes.addBtn} onClick={handleAdd}>\n                <AddIcon />\n                <Typography className={classes.addBtnText}>\n                  Add\n                </Typography>\n              </Button>\n            </Box>\n          </form>\n        </Box>\n      </Box>\n    </>\n  );\n}\n","import React, { useState, forwardRef, useImperativeHandle } from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Snackbar } from '@material-ui/core';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst CustomSnackbar = forwardRef((props, ref) => {\n  const [open, setOpen] = useState(false);\n  const { variant, text } = props;\n\n  useImperativeHandle(ref, () => ({\n    handleOpen() {\n      setOpen(true);\n    },\n  }));\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\n      <Alert onClose={handleClose} severity={variant}>\n        {text}\n      </Alert>\n    </Snackbar>\n  );\n});\n\nexport default CustomSnackbar;\n","import React, { useState, useRef } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport {\n  Container,\n  Box,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useLocalStorageState from 'use-local-storage-state';\nimport ShowTotpView from './views/showTotpView';\nimport AddTotpView from './views/addTotpView';\nimport CustomSnackbar from '../../components/snackbar/snackbar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(4),\n  },\n  cellContainer: {\n    backgroundColor: theme.palette.background.light,\n    borderRadius: '5px',\n    padding: theme.spacing(2),\n  },\n  contentBox: {\n    height: '60vh',\n  },\n}));\n\nconst viewTypes = ['show', 'add'];\n\nexport default function Landing() {\n  const classes = useStyles();\n  const [activeContent, setActiveContent] = useState('show');\n  const [snackbarText, setSnackbarText] = useState('');\n  const snackbarRef = useRef();\n\n  const [data, setData] = useLocalStorageState('totpData', []);\n\n  const handleAddCode = (code, name) => {\n    setData([...data, {\n      id: code,\n      secret: code,\n      name,\n    }]);\n  };\n\n  const clearAllCodes = () => {\n    setData.reset();\n  };\n\n  const handleViewChange = (newType) => {\n    if (!viewTypes.includes(newType)) {\n      return;\n    }\n    setActiveContent(newType);\n  };\n\n  const snackBarOpen = (text) => {\n    setSnackbarText(text);\n    snackbarRef.current.handleOpen();\n  };\n\n  const variableContent = () => {\n    switch (activeContent) {\n      case 'show':\n        return (\n          <ShowTotpView\n            handleViewChange={handleViewChange}\n            data={data}\n            snackBarOpen={snackBarOpen}\n            clearAllCodes={clearAllCodes}\n          />\n        );\n\n      case 'add':\n        return (\n          <AddTotpView\n            handleViewChange={handleViewChange}\n            handleAddCode={handleAddCode}\n            snackBarOpen={snackBarOpen}\n          />\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <>\n      <CustomSnackbar text={snackbarText} variant=\"success\" ref={snackbarRef} />\n      <Container className={classes.root}>\n        <Grid container alignItems=\"center\" justifyContent=\"center\">\n          <Grid container item xs={12} md={6} className={classes.cellContainer}>\n            <Box className={classes.contentBox} width={1}>\n              {variableContent()}\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Layout from './theme/layout/layout';\nimport Landing from './pages/landing/landing';\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    backgroundColor: theme.palette.background.main,\n  },\n}));\n\nfunction CustomRoute({ path, component, exact = true }) {\n  return (\n    <Route exact={exact} path={path}>\n      <Layout>\n        {component}\n      </Layout>\n    </Route>\n  );\n}\n\nfunction App() {\n  const classes = useStyles();\n  document.title = 'Web - TOTP';\n  return (\n    <Router className={classes.app}>\n      <Switch>\n        <CustomRoute path=\"/\" component={<Landing />} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@material-ui/core/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#0288d1',\n      light: '#5eb8ff',\n      dark: '#005b9f',\n    },\n    secondary: {\n      main: '#bcbcbc',\n      light: '#ffffff',\n      dark: '#7e7e7e',\n    },\n    background: {\n      main: '#ededed',\n      light: '#fff',\n      dark: '#dbdbdb',\n      contrastText: '#000',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme/theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}